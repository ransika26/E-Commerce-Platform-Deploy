name: Node.js CI with Lockfiles

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build Backend
      working-directory: ./backend
      run: npm run build --if-present
      
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build --if-present

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ransika26/demo-backend:latest
          ransika26/demo-backend:${{ github.sha }}
        cache-from: type=registry,ref=ransika26/demo-backend:latest
        cache-to: type=inline

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ransika26/demo-frontend:latest
          ransika26/demo-frontend:${{ github.sha }}
        cache-from: type=registry,ref=ransika26/demo-frontend:latest
        cache-to: type=inline
