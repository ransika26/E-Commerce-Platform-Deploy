name: Node.js CI with Docker Compose
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build Backend
      working-directory: ./backend
      run: npm run build --if-present

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build --if-present

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Images
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        # Build base images
        docker build -t ${DOCKER_USERNAME}/frontend-builder:latest ./frontend
        docker build -t ${DOCKER_USERNAME}/frontend-nginx:latest ./frontend
        docker build -t ${DOCKER_USERNAME}/backend:latest ./backend
        
        # Push images
        docker push ${DOCKER_USERNAME}/frontend-builder:latest
        docker push ${DOCKER_USERNAME}/frontend-nginx:latest
        docker push ${DOCKER_USERNAME}/backend:latest
        
        # Test with docker compose
        docker compose up -d
        docker compose ps
        docker compose down

    - name: Cleanup
      if: always()
      run: docker compose down
